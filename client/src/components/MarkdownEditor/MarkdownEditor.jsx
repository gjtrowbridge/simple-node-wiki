/**
  Provides an input "editor" for typing in markdown
  showing the resulting html.
*/
var React = require('react');
import EditBox from './EditBox.jsx';
import DisplayBox from './DisplayBox.jsx';
var marked = require('marked');
var highlight = require('highlight.js');

marked.setOptions({
  highlight: function(code) {
    return highlight.highlightAuto(code).value;
  }
});

// Used in markdownToHtml to add a missing class
// to highlighted code blocks
// This is necessary for highlight.js's css to work
var _codeBlockRegex = /(<code)( class="[a-zA-Z-]+)?(")?(>)/g;
var _codeBlockReplacer = function(match, p1, p2, p3, p4) {
  if (p2 === undefined) {
    return p1 + ' class="hljs"' + p4;
  } else {
    return p1 + p2 + ' hljs' + p3 + p4;
  }
};

class MarkdownEditor extends React.Component {
  constructor(props) {
    super(props);
    this.markdownToHtml = this.markdownToHtml.bind(this);
  }
  // This is used to sanitize raw user-inputted
  // markdown and convert it to HTML
  markdownToHtml(markdown) {
    var html = marked(markdown, {sanitize: true});
    // Adds a class to code blocks generated by markdown
    // so they receive the correct styles
    return html.replace(_codeBlockRegex, _codeBlockReplacer);
  }
  render() {
    var editBoxExtraClasses = ['box-edit-mode'];
    var displayBoxExtraClasses = ['box-edit-mode'];
    if (this.props.viewMode) {
      editBoxExtraClasses = ['hidden'];
      displayBoxExtraClasses = ['display-box-view-mode'];
    }
    return (
      <div className="markdown-editor">
        <EditBox extraClasses={editBoxExtraClasses} markdownText={this.props.markdownText}
            onChange={this.props.onChange} statusText={this.props.statusText} />
        <DisplayBox extraClasses={displayBoxExtraClasses}
            sanitizedHtml={this.markdownToHtml(this.props.markdownText)} />
      </div>
    );
  }
}

MarkdownEditor.propTypes = {
  markdownText: PropTypes.string.isRequired,
  onChange: PropTypes.func.isRequired,
  statusText: PropTypes.string,
  // If enabled, shows only the display box
  // Otherwise shows both the display and edit boxes
  viewMode: PropTypes.bool.isRequired,
};

export default MarkdownEditor;
